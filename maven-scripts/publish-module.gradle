apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

tasks.withType(dokkaHtmlPartial.getClass()).configureEach {
    pluginsMapConfiguration.set(
            ["org.jetbrains.dokka.base.DokkaBase": """{ "separateInheritedMembers": true}"""]
    )
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

group = ext.publishedGroupId
version = ext.libraryVersion

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId ext.publishedGroupId
                artifactId ext.artifact
                version ext.libraryVersion
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar
                artifact javadocJar

                pom {
                    name = ext.artifact
                    description = ext.libraryDescription
                    url = ext.siteUrl
                    licenses {
                        license {
                            name = ext.licenseName
                            url = ext.licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id = ext.developerId
                            name = ext.developerName
                            email = ext.developerEmail
                        }
                    }
                    scm {
                        connection = ext.gitConnection
                        developerConnection = ext.gitDeveloperConnection
                        url = ext.gitConnection
                    }
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            rootProject.ext["signingKeyId"],
            rootProject.ext["signingKey"],
            rootProject.ext["signingPassword"],
    )
    sign publishing.publications
}
